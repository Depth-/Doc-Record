Linux常用命令总结
拨号加7 70 异地：
小密圈备份
大数据集群hadoop+hbase+spark+hive

Linux 
-----------------
用户
useradd
userdel

查找命令
whereis  查找命令 ·使用不同终端SHELL时候容易出现环境变量不同步
exportPATH=$PATH:/usr/bin增加变量

查找
grep -H 'spring' *.xml 查找所以有的包含 spring 的 xml 文件
grep 'test' d* 显示所有以 d 开头的文件中包含 test 的行。
grep 'test' aa bb cc 显示在 aa，bb，cc 文件中匹配 test 的行。
grep '[a-z]\{5\}' aa 显示所有包含每个字符串至少有 5 个连续小写字符的字符串的行。
find 路径 -name 文件
find 路径 -name "*文件*"  模糊匹配~ 
find . -name "*文件*"  当前目录延伸 
find 路径 -name "*.c" -exec wc -l {} \; 找出每次匹配文件的行数 大括号是每处理一次继续想下的意思 分号是结束

进程看查
ps –ef | grep tomcat 查看所有有关 tomcat 的进程
ps -ef | grep --color java 高亮要查询的关键字

终止线程
kill -9 19979 终止线程号位 19979 的进程

复制文件操作
cp source dest 复制文件
cp -r sourceFolder targetFolder 递归复制整个文件夹
scp sourecFile romoteUserName@remoteIp:remoteAddr 远程拷贝

目录
mkdir newfolder 删除目录 rmdir deleteEmptyFolder 删除空目录递归 rm -rf deleteFile 

移动文件
mv /temp/movefile /targetFolder

修改文件权限
chmod 777 file.java //file.java 的权限-rwxrwxrwx，r 表示读、w 表示写、x 表示可执行
≈权限分三组 自己-GROUP-OTHER
3个字节为一组首位d文件夹-文件
chomd755  644不带执行的权限

压缩
tar -czf test.tar.gz /test1 /test2
解压
tar -xvzf test.tar.gz
打包与压缩（高效率）
tar cf  压缩后的文件名.tar 源文件
tar cjf 压缩后文件名tar.bz2 源文件
查看 tar tvf 文件名
恢复 tar xf 文件名 -C 文件夹

tail 查看文件尾 10 行
tail -n 10 example.txt
查看日志类型文件
tail -f exmaple.log //这个命令会自动显示新增内容，屏幕只显示 10 行内容的（可设置）。

端口  查看端口占用情况
netstat -tln | grep 8080 查看端口 8080 的使用情况
查看端口属于哪个程序 
lsof -i :8080
查看进程   ps aux|grep java 查看 java 进程
所有进程   ps aux 

diff -r 目录 目录 目录对比

>> 输出文件    
&& 前一句语句错误不会执行下一句
； 前一句语句错误不影响下一句的操作 可以添加后续跟进命令 
|  管道  一个命令的输出 作为另外一个命令的输入 一个前序只完成一个功能


键盘操作移动
ctrl+a	跳转到命令最前面
ctrl+e	跳转到命令最后面
alt+b	向前跳转一个单词
alt+f	向后跳转一个单词

替换
ctrl + t 将光标当前字符与前面一个字符替换
alt + t 交换两个光标当前所处位置单词和光标前一个单词
alt + u 把光标当前位置单词变为大写
alt + l 把光标当前位置单词变为小写
alt + c 把光标当前位置单词头一个字母变为大写
^oldstr^newstr 替换前一次命令中字符串


Gitlab
-----------------
常用的
git add .
git commit -m ""
git push
git pull

一个小TIP 如果次文件夹曾经被加入过git追踪，现在被加入.gitignore里了，但是github上还有此文件夹。
对于这种情况，稍微有点复杂，因为已经加入.gitignore的文件或文件夹，无法对其进行提交了，哪怕是将其删除，都无法提交。
我们用以下方法可以很好的解决这个问题：
git rm -r --cached some-directory
git commit -m 'Remove the now ignored directory "some-directory"'
git push origin master
git pull 获取

VIM
-----------------
w ! sudo tee %   vim用root保存
：set number 行数
：行数 跳转
1G 第一行 
GG 最后一行
3G 第三行
v  选中  
d  删除
dG 删除全部
P  粘贴 
x  删除光标内容
dd 删除一行
u  恢复上一步。重复上次操作G从当前到末尾行的缩进j下移一行$到行尾A行尾插入
y  复制
n 下一个
数字==  从光标开始  缩进下面多少行
/pattern 向下？
pattern  向上
*  跳到下个光标单位
N 重复删除
hjkl   操作f{char}调到当前行的字符

命令行操作
:!ls加上感叹号可以执行外部命令

vim的分屏
在shell里打开几个文件并且分屏:
　　vim-On file1 file2...
　　vim-on file1 file2...
大O表示垂直分割(小o表示水平分割），n表示分几个屏，默认按后面要分割的文件数来决定分几个屏。

在vim里打开一个分屏:
　　创建空白分屏：
　　:new 打开任意文件：
　　:vsplit(:vsp) filename
　　:sp(split) filename
关闭一个分屏:
　　:only或者ctrl+w和o取消其它分屏，只保留当前分屏
　　ctrl+w和c(close)
　　只剩最后一个分屏以后推出：
　　ctrl+w和q(quit)
移动光标，也就是切换分屏；
　　ctrl+w和w（各种切换，只有两个分屏的时候还是比较方便的）
　　ctrl+w和h(H)左
　　ctrl+w和j(J)下
　　ctrl+w和k(K)上
　　ctrl+w和l(L)右

替换
替换是vi的强项,使用“:s/模式/字符串/标志”进行替换，其中的“模式”是一个正则表达式，可以用来匹配字符串.以下提供几个例子.
:s/aa/bb/g 将光标所在行出现的所有包含aa的字符串中的aa替换为bb
:s/\<aa\>/bb/g 将光标所在行出现的所有aa替换为bb,仅替换aa这个单词
:%s/aa/bb/g 将文档中出现的所有包含aa的字符串中的aa替换为bb
:12,23s/aa/bb/g 将从12行到23行中出现的所有包含aa的字符串中的aa替换为bb
:12,23s/^/#/ 将从12行到23行的行首加入#字符
:%s=*$== 将所有行尾多余的空格删除
:%s/\s\+$// 将所有行尾多余的空格删除
:g/^\s*$/d 将所有不包含字符(空格也不包含)的空行删除
:%s/\(\s*\n\)\+/\r/ 将所有不包含字符(空格也不包含)的空行删除.
:%s!\s*//.*!! 去掉所有的“//”注释

例子
yw  表示拷贝从当前光标到光标所在单词结尾的内容.
dw  表示删除从当前光标到光标所在单词结尾的内容.
daw  表示删除光标所在的单词，不管光标在此单词那一位置
y0  表示拷贝从当前光标到光标所在行首的内容.
d0  表示删除从当前光标到光标所在行首的内容.
y$  表示拷贝从当前光标到光标所在行尾的内容.
d$[D]  表示删除从当前光标到光标所在行尾的内容.
5dd[d5d]  表示删除光标以下5行.
:12,24y  表示拷贝第12行到第24行之间的内容.
:12,y  表示拷贝第12行到光标所在行之间的内容.
:,24y  表示拷贝光标所在行到第24行之间的内容.删除类似.
5fx  表示查找光标后第5个x字符.
5w(e)  移动光标到下五个单词的头部(尾部).
:sp(:vsp) 文件名vim将分割出一个横(纵)向窗口,并在该窗口中打开新文件.

备注：VIM比较复杂，所以一般需要一个伟大的前人做好的配置环境，我用的是这个
Link: https://github.com/Depth-/dot-vimrc
